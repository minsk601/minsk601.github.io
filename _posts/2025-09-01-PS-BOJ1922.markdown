---
layout: post
title:  "[C++] 백준 1922번: 네트워크 연결"
date:   2025-09-01 16:00:00 +0900
categories: PS
tags: [Graph, Minimum Spanning Tree]
---

# 문제

[문제: https://acmicpc.net/problem/1922](https://boj.kr/1922)   
**난이도: 골드 IV**

# 풀이 방법  

MST(Minimum Spanning Tree), 최소 스패닝 트리를 구하는 문제이다.  
크루스칼 알고리즘 혹은 프림 알고리즘을 이용해 해결할 수 있다.  
크루스칼 알고리즘의 경우 Union-Find 알고리즘에 대한 지식이 필요하다.  
프림 알고리즘의 경우 다익스트라 알고리즘과 비슷하게 풀 수 있다.  

우선순위 큐를 이용해, 프림 알고리즘을 이용하여 문제를 해결했다.  

# 소스 코드

```cpp
#include <iostream>
#include <vector>
#include <queue>
#include <algorithm>
#include <climits>

using namespace std;

int n;  // 컴퓨터의 개수
vector<pair<int, int>> adj[1001];
bool vis[1001];

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);

    priority_queue<pair<int, int>> q;

    int m, s = 0;
    cin >> n >> m;
    for(int i = 0; i < m; i++) {
        int a, b, c;
        cin >> a >> b >> c;
        adj[a].push_back({b, c});
        adj[b].push_back({a, c});
    }

    q.push({ 0, 1 });

    while(!q.empty()) {
        pair<int, int> data = q.top();
        q.pop();

        int weight = -data.first;
        int to = data.second;

        if(vis[to]) continue;

        s += weight;
        vis[to] = true;

        for(int i = 0; i < adj[to].size(); i++) {
            q.push({ -adj[to][i].second, adj[to][i].first });
        }
    }
    cout << s << "\n";
    return 0;
}
```