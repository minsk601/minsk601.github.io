---
layout: post
title:  "[C++] 백준 5639번: 이진 검색 트리"
date:   2025-07-05 00:00:00 +0900
categories: PS
tags: [Tree, Recursion]
---

# 문제

[문제: https://acmicpc.net/problem/5639](https://boj.kr/5639)   
**난이도: 골드 IV**

# 풀이 방법  

이진 검색 트리는 다음과 같은 세 가지 조건을 만족하는 이진 트리이다.   
   
**>** 노드의 왼쪽 서브트리에 있는 모든 노드의 키는 노드의 키보다 작다   
**>** 노드의 오른쪽 서브트리에 있는 모든 노드의 키는 노드의 키보다 크다   
**>** 왼쪽, 오른쪽 서브트리도 모두 이진 검색 트리이다   

문제에서 트리를 전위 순회한 결과가 주어졌다. 주어진 순서대로 트리를 구성하면, 전위 순회 결과와 정확히 일치하는 구조가 생성된다.   
주어진 전위 순회 결과를 바탕으로 트리를 생성하고, 후위 순회한 결과를 출력한다.   


# 소스 코드   
```cpp
#include <iostream>
#include <algorithm>

using namespace std;

typedef struct Node {
    int data;
    Node *left;
    Node *right;
} Node;

Node* insert(Node *root, int data) {
    if(root == NULL) {
        root = (Node *)malloc(sizeof(Node));
        root->data = data;
        root->left = root->right = NULL;
    } else {
        if(data < root->data) {
            root->left = insert(root->left, data);
        } else {
            root->right = insert(root->right, data);
        }
    }
    return root;
}

void postOrder(Node *root) {
    if(root) {
        postOrder(root->left);
        postOrder(root->right);
        cout << root->data << "\n";
    }
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);
    
    Node *tree = NULL;
    int n;
    while(cin >> n) {
        tree = insert(tree, n);
    }
    postOrder(tree);
    return 0;
}
```