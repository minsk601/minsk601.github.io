---
layout: post
title:  "[C++] 백준 1991번: 트리 순회"
date:   2025-07-05 15:00:00 +0900
categories: PS
tags: [Tree, Recursion]
---

# 문제

[문제: https://acmicpc.net/problem/1991](https://boj.kr/1991)   
**난이도: 실버 I**

# 풀이 방법  

**1.** 전위(preorder), 중위(inorder), 후위(postorder) 순회 함수 각각 선언   
**2.** pair<char, char> 배열에 {왼쪽 자식 노드, 오른쪽 자식 노드} 순서로 저장    
**3.** 배열의 index 값은 (노드의 이름(char) - 'A') 으로 설정   
**4.** 루트 노드 A를 기준으로 전위, 중위, 후위 순회   

**> 전위 순회**   
현재 노드 처리 후 왼쪽 자식 노드, 오른쪽 자식 노드 순으로 전위 순회 함수 호출   

**> 중위 순회**   
왼쪽 자식 노드 기준으로 중위 순회 함수 호출, 루트 노드 처리, 오른쪽 자식 노드 기준으로 중위 순회 함수 호출   

**> 후위 순회**   
왼쪽 자식 노드, 오른쪽 나식 노드 순으로 후위 순회 함수 호출 후 현재 노드 처리   


# 소스 코드
```cpp
#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

pair<char, char> arr[26];

void preorder(char root) {
    if(root != '.') {
        cout << root;
        preorder(arr[(root - 'A')].first);
        preorder(arr[(root - 'A')].second);
    }
}

void inorder(char root) {
    if(root != '.') {
        inorder(arr[(root - 'A')].first);
        cout << root;
        inorder(arr[(root - 'A')].second);
    }
}

void postorder(char root) {
    if(root != '.') {
        postorder(arr[(root - 'A')].first);
        postorder(arr[(root - 'A')].second);
        cout << root;
    }
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);

    int n;
    cin >> n;
    for(int i = 0; i < n; i++) {
        char root, l, r;
        cin >> root >> l >> r;
        arr[(root - 'A')].first = l;
        arr[(root - 'A')].second = r;
    }
    preorder('A');
    cout << endl;
    inorder('A');
    cout << endl;
    postorder('A');
    return 0;
}
```